apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{  .Chart.Name }}-deployment"
  labels:
    chart: '{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}'
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: "{{  .Chart.Name }}-selector"
      version: "current"
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  template:
    metadata:
      labels:
        app: "{{  .Chart.Name }}-selector"
        version: "current"
    spec:
      containers:
        - name: "{{  .Chart.Name  }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.servicePort}}
          resources:
            requests:
              cpu: "{{ .Values.image.resources.requests.cpu }}"
              memory: "{{ .Values.image.resources.requests.memory }}"
          env:
            - name: TYPEORM_PASSWORD
              valueFrom:
                secretKeyRef:
                name: {{ .Values.postgres.password.fromSecret.name }}
                key: {{ .Values.postgres.password.fromSecret.key }}
            - name: TYPEORM_DATABASE
              value : "{{ .Values.postgres.db }}"
            - name: TYPEORM_HOST
              value : "{{ .Values.postgres.host }}"
            - name: TYPEORM_USERNAME
              value : "{{ .Values.postgres.user }}"
            - name: PG_PORT
              value : "{{ .Values.postgres.port }}"
            - name: SERVER_PORT
              value : "{{ .Values.service.servicePort }}"
